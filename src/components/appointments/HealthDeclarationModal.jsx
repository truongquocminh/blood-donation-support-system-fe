import React, { useState, useEffect } from 'react';
import { X, Heart, CheckCircle, XCircle, FileText } from 'lucide-react';
import toast from 'react-hot-toast';
import { getAppointmentHealthDeclaration } from '../../services/healthDeclarationService';
import { formatVietnamTime } from '../../utils/formatters';

const HealthDeclarationModal = ({ isOpen, onClose, appointmentId }) => {
  const [healthData, setHealthData] = useState(null);
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    if (isOpen && appointmentId) {
      fetchHealthDeclaration();
    }
  }, [isOpen, appointmentId]);

  const fetchHealthDeclaration = async () => {
    try {
      setLoading(true);
      const response = await getAppointmentHealthDeclaration(appointmentId);
      
      if (response.status === 200 && response.data.data) {
        setHealthData(response.data.data);
      } else {
        toast.error('Kh√¥ng th·ªÉ t·∫£i th√¥ng tin khai b√°o y t·∫ø');
      }
    } catch (error) {
      console.error('Error fetching health declaration:', error);
      toast.error('C√≥ l·ªói x·∫£y ra khi t·∫£i th√¥ng tin khai b√°o y t·∫ø');
    } finally {
      setLoading(false);
    }
  };

  const handleClose = () => {
    setHealthData(null);
    onClose();
  };

  if (!isOpen) return null;

  const InfoRow = ({ icon: Icon, label, value, isBoolean = false }) => (
    <div className="flex items-start space-x-3 py-3 border-b border-gray-100 last:border-b-0">
      <div className="p-2 bg-gray-50 rounded-lg">
        <Icon className="w-4 h-4 text-gray-600" />
      </div>
      <div className="flex-1">
        <p className="text-sm font-medium text-gray-700 mb-1">{label}</p>
        {isBoolean ? (
          <div className="flex items-center space-x-2">
            {value ? (
              <>
                <XCircle className="w-4 h-4 text-red-500" />
                <span className="text-sm text-red-600 font-medium">C√≥</span>
              </>
            ) : (
              <>
                <CheckCircle className="w-4 h-4 text-green-500" />
                <span className="text-sm text-green-600 font-medium">Kh√¥ng</span>
              </>
            )}
          </div>
        ) : (
          <p className="text-sm text-gray-900">{value || 'Kh√¥ng c√≥ th√¥ng tin'}</p>
        )}
      </div>
    </div>
  );

  return (
    <div className="mt-0-important fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-xl shadow-xl max-w-3xl w-full max-h-[90vh] overflow-y-auto">
        <div className="flex items-center justify-between px-6 py-4 border-b border-gray-200 sticky top-0 bg-white rounded-t-xl">
          <div className="flex items-center space-x-3">
            <Heart className="w-5 h-5 text-red-600" />
            <div>
              <h3 className="text-lg font-semibold text-gray-900">Khai b√°o y t·∫ø</h3>
              <p className="text-sm text-gray-500">L·ªãch h·∫πn #{appointmentId}</p>
            </div>
          </div>
          <button
            onClick={handleClose}
            className="p-1.5 text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded-lg transition-colors"
          >
            <X className="w-4 h-4" />
          </button>
        </div>

        <div className="px-6 py-4">
          {loading ? (
            <div className="flex items-center justify-center py-12">
              <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-red-600"></div>
              <span className="ml-3 text-gray-600">ƒêang t·∫£i th√¥ng tin...</span>
            </div>
          ) : healthData ? (
            <div className="space-y-6">
              <div className="bg-red-50 border-l-4 border-red-400 p-4 rounded-r-lg">
                <div className="flex items-start space-x-2">
                  <FileText className="w-4 h-4 text-red-500 mt-0.5 flex-shrink-0" />
                  <div className="text-sm text-red-700">
                    <p className="font-medium mb-1">Th√¥ng tin khai b√°o y t·∫ø:</p>
                    <p>ƒê√¢y l√† th√¥ng tin ƒë√£ ƒë∆∞·ª£c khai b√°o khi ƒë·∫∑t l·ªãch h·∫πn.</p>
                  </div>
                </div>
              </div>

              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <div className="space-y-4">
                  <h4 className="font-semibold text-gray-900 flex items-center space-x-2">
                    <span>üíâ</span>
                    <span>Ti·ªÅn s·ª≠ b·ªánh l√Ω</span>
                  </h4>
                  
                  <div className="bg-gray-50 rounded-lg p-4 space-y-3">
                    <InfoRow
                      icon={Heart}
                      label="B·ªánh l√¢y qua ƒë∆∞·ªùng m√°u"
                      value={healthData.hasBloodTransmittedDisease}
                      isBoolean={true}
                    />
                    
                    <InfoRow
                      icon={Heart}
                      label="B·ªánh m√£n t√≠nh"
                      value={healthData.hasChronicDisease}
                      isBoolean={true}
                    />
                    
                    <InfoRow
                      icon={FileText}
                      label="Thu·ªëc ƒëang s·ª≠ d·ª•ng"
                      value={healthData.currentMedications}
                    />
                  </div>

                  <h4 className="font-semibold text-gray-900 flex items-center space-x-2 pt-4">
                    <span>üè•</span>
                    <span>Ho·∫°t ƒë·ªông/ti·ªÅn s·ª≠ g·∫ßn ƒë√¢y</span>
                  </h4>
                  
                  <div className="bg-gray-50 rounded-lg p-4 space-y-3">
                    <InfoRow
                      icon={Heart}
                      label="XƒÉm m√¨nh, ch√¢m c·ª©u, ph·∫´u thu·∫≠t"
                      value={healthData.hasTattooAcupuncture}
                      isBoolean={true}
                    />
                    
                    <InfoRow
                      icon={Heart}
                      label="Ti√™m vaccine g·∫ßn ƒë√¢y"
                      value={healthData.hasRecentVaccine}
                      isBoolean={true}
                    />
                    
                    <InfoRow
                      icon={Heart}
                      label="ƒêi ra n∆∞·ªõc ngo√†i"
                      value={healthData.hasTravelAbroad}
                      isBoolean={true}
                    />
                    
                    <InfoRow
                      icon={Heart}
                      label="H√†nh vi t√¨nh d·ª•c kh√¥ng an to√†n"
                      value={healthData.hasUnsafeSex}
                      isBoolean={true}
                    />
                  </div>
                </div>

                <div className="space-y-4">
                  <h4 className="font-semibold text-gray-900 flex items-center space-x-2">
                    <span>‚ÑπÔ∏è</span>
                    <span>Th√¥ng tin kh√°c</span>
                  </h4>
                  
                  <div className="bg-gray-50 rounded-lg p-4 space-y-3">
                    <InfoRow
                      icon={Heart}
                      label="L·∫ßn ƒë·∫ßu hi·∫øn m√°u"
                      value={healthData.isFirstBlood}
                      isBoolean={true}
                    />
                  </div>

                  {(healthData.isPregnantOrBreastfeeding !== null || healthData.isMenstruating !== null) && (
                    <>
                      <h4 className="font-semibold text-gray-900 flex items-center space-x-2 pt-4">
                        <span>üë©</span>
                        <span>D√†nh cho ph·ª• n·ªØ</span>
                      </h4>
                      
                      <div className="bg-pink-50 rounded-lg p-4 space-y-3">
                        {healthData.isPregnantOrBreastfeeding !== null && (
                          <InfoRow
                            icon={Heart}
                            label="Mang thai, cho con b√∫"
                            value={healthData.isPregnantOrBreastfeeding}
                            isBoolean={true}
                          />
                        )}
                        
                        {healthData.isMenstruating !== null && (
                          <InfoRow
                            icon={Heart}
                            label="ƒêang trong k·ª≥ kinh nguy·ªát"
                            value={healthData.isMenstruating}
                            isBoolean={true}
                          />
                        )}
                      </div>
                    </>
                  )}

                  {healthData.createdAt && (
                    <>
                      <h4 className="font-semibold text-gray-900 flex items-center space-x-2 pt-4">
                        <span>üìÖ</span>
                        <span>Th√¥ng tin h·ªá th·ªëng</span>
                      </h4>
                      
                      <div className="bg-blue-50 rounded-lg p-4">
                        <InfoRow
                          icon={FileText}
                          label="Th·ªùi gian khai b√°o"
                          value={formatVietnamTime(healthData.createdAt)}
                        />
                      </div>
                    </>
                  )}
                </div>
              </div>

              <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                <div className="flex items-start space-x-2">
                  <FileText className="w-4 h-4 text-yellow-600 mt-0.5 flex-shrink-0" />
                  <div className="text-sm text-yellow-800">
                    <p className="font-medium mb-1">L∆∞u √Ω:</p>
                    <p>Th√¥ng tin n√†y ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ ƒë√°nh gi√° t√¨nh tr·∫°ng s·ª©c kh·ªèe c·ªßa b·∫°n. N·∫øu c√≥ thay ƒë·ªïi v·ªÅ t√¨nh tr·∫°ng s·ª©c kh·ªèe, vui l√≤ng th√¥ng b√°o v·ªõi nh√¢n vi√™n y t·∫ø khi ƒë·∫øn hi·∫øn m√°u.</p>
                  </div>
                </div>
              </div>
            </div>
          ) : (
            <div className="text-center py-12">
              <Heart className="w-16 h-16 mx-auto text-gray-300 mb-4" />
              <h3 className="text-lg font-medium text-gray-900 mb-2">Kh√¥ng c√≥ th√¥ng tin khai b√°o</h3>
              <p className="text-gray-500">Kh√¥ng t√¨m th·∫•y th√¥ng tin khai b√°o y t·∫ø cho l·ªãch h·∫πn n√†y.</p>
            </div>
          )}

          <div className="flex justify-end pt-6 border-t border-gray-200 mt-6">
            <button
              onClick={handleClose}
              className="px-6 py-2.5 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors font-medium"
            >
              ƒê√≥ng
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default HealthDeclarationModal;